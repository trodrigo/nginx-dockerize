FROM php:7.3.6-fpm-alpine3.9 as builder
# instala bash e client do mysql
RUN apk add --no-cache openssl bash mysql-client nodejs npm
# habilita/instala extensoes do pdo
RUN docker-php-ext-install pdo pdo_mysql

# instala composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# instala dockerize para gerenciar dependencia entre containers
ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz

# seta workdir e remove conteudo default do fpm
WORKDIR /var/www
RUN rm -rf /var/www/html
# cria link simbolico do public/html
RUN ln -s public html

# copia laravel para dentro do container
COPY . /var/www
RUN composer install \
&& php artisan key:generate \
&& php artisan cache:clear \
&& chmod -R 775 storage

RUN npm install


FROM php:7.3.6-fpm-alpine3.9
RUN apk add --no-cache mysql-client bash
RUN docker-php-ext-install pdo pdo_mysql
WORKDIR /var/www
RUN rm -rf /var/www/html

COPY --from=builder /var/www .



EXPOSE 9000
ENTRYPOINT ["php-fpm"]
